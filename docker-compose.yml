version: '1.0'

networks:
  servernet:
    driver: bridge

services:
  mongo:
    image: mongo:6.0.4
    container_name: mongo
    networks:
      - servernet
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/mongo-volume:/data/db
    environment:
        - "TZ: Asia/Shanghai"
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=88638673
    restart: always

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    networks:
      - servernet
    ports:
      - "8081:8081"
    environment:
      - "TZ: Asia/Shanghai"
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=88638673
      - ME_CONFIG_MONGODB_SERVER=mongo
    restart: always

  redis:
    image: redis:7.0.8
    container_name: redis
    networks:
      - servernet
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis-volume:/data
    restart: always
    environment:
      - "TZ: Asia/Shanghai"

  nodejs:
    build: 
      context: ./nodejs
    container_name: nodejs
    networks:
      - servernet
    ports:
      - "80:80"
    restart: always
    environment:
      - "TZ: Asia/Shanghai"
    depends_on:
      - mongo
      - redis

#nginx是用来进行反向代理的，如果不需要可以注释掉
  #nginx:
  #  image: nginx:1.23.3
  #  container_name: nginx
  #  networks:
  #    - servernet
  #  ports:
  #    - "80:80"
  #    - "443:443"
  #  volumes:
  #    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #    - ./nginx/conf.d:/etc/nginx/conf.d
  #    - ./nginx/html:/usr/share/nginx/html
  #  restart: always
  #  environment:
  #    - TZ: Asia/Shanghai
  #  depends_on:
  #    - nodejs